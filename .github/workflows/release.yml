name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run tests
        run: go test -v ./...

      - name: Build binaries
        run: |
          # Create dist directory
          mkdir -p dist
          
          # Build for different platforms
          platforms=(
            "linux/amd64"
            "linux/arm64"
            "linux/386"
            "darwin/amd64"
            "darwin/arm64"
            "windows/amd64"
            "windows/386"
            "freebsd/amd64"
            "freebsd/arm64"
          )
          
          for platform in "${platforms[@]}"; do
            platform_split=(${platform//\// })
            GOOS=${platform_split[0]}
            GOARCH=${platform_split[1]}
            
            output_name="ask-${GOOS}-${GOARCH}"
            if [ $GOOS = "windows" ]; then
              output_name+='.exe'
            fi
            
            echo "Building for $GOOS/$GOARCH..."
            env GOOS=$GOOS GOARCH=$GOARCH go build -ldflags="-s -w" -o dist/$output_name .
            
            # Create tarball for non-Windows platforms
            if [ $GOOS != "windows" ]; then
              tar -czf dist/ask-${GOOS}-${GOARCH}.tar.gz -C dist $output_name
              rm dist/$output_name
            else
              # Create zip for Windows
              zip -j dist/ask-${GOOS}-${GOARCH}.zip dist/$output_name
              rm dist/$output_name
            fi
          done

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}